---
layout: post
title: SyncTeX, latexmk and Vim-LaTeX
published: false
categories:
---
One of my projects this winter break has been to finally take the leap and switch to [vim](http://www.vim.org) for all my text editing needs.
The full story behind this momentous decision will have to wait for another day, but the short version is simply that, as my typing has improved over the past couple of months, I've finally started to notice how much reaching for the mouse slows me down.
My goal in learning vim is to spend as much time as possible with my fingers on the home row.
The learning curve has been steep indeed, but I'm finally at the point where I'm more productive in vim than I used to be in [Sublime Text](http://www.sublimetext.com) at the end of last semester with one notable exception: LaTeX.
Back in 2013 I learned about the fantastic [LaTeXTools](https://github.com/SublimeText/LaTeXTools) for Sublime which I've been using ever since.
My main precondition for switching to vim has been to find a setup with comparable functionality.

After considering several alternatives, including [LaTeX-Box](https://github.com/LaTeX-Box-Team/LaTeX-Box) and [ATP](http://atp-vim.sourceforge.net), I finally decided to go with the venerable [Vim-LaTeX](http://vim-latex.sourceforge.net) plugin.
Up until today, however, there were two deal-breakers:

1. I couldn't figure out how to set things up so that Vim-LaTeX uses ``latexmk`` to compile a pdf by running ``pdflatex`` the appropriate number of times (this is the default compliation command in LaTeXTools) and,
2. I couldn't get forward or reverse search working with SyncTeX.

After a whole day of Googling and tinkering, I'm 99% satisfied with my solution, so here it is.
You can view and fork all of the relevant configuration files in my [dotfiles](https://github.com/fditraglia/dotfiles) repository on GitHub.
I keep a copy of the scripts from Step 2 in my [bin](https://github.com/fditraglia/frank-bin) repository.

Step 1: Compilation Commands
-----------------------------
First, make sure that you have all of the lines that a required for using vim-latex in your ``.vimrc`` file, namely:
```
" REQUIRED. This makes vim invoke Latex-Suite when you open a tex file.
filetype plugin 
" IMPORTANT: grep will sometimes skip displaying the file name if you
" search in a singe file. This will confuse Latex-Suite. Set your grep
" program to always generate a file-name.
set grepprg=grep\ -nH\ $*

```
I also include the following optional, but sensible, suggestions:
```
" OPTIONAL: This enables automatic indentation as you type.
filetype indent on
" OPTIONAL: Starting with Vim 7, the filetype of empty .tex files defaults to
" 'plaintex' instead of 'tex', which results in vim-latex not being loaded.
" The following changes the default filetype back to 'tex':
let g:tex_flavor='latex'
```
Now **here's the important part** - add the following to your ``.vimrc``
```
" use latexmk for complilation with the bibtex option and output pdf
 let g:Tex_MultipleCompileFormats = 'pdf'
 let g:Tex_DefaultTargetFormat='pdf'
 let g:Tex_CompileRule_pdf = "latexmk -pdflatex='pdflatex -file-line-error -synctex=1 -interaction=nonstopmode' -bibtex -pdf $*"
```
After restarting vim and using ``\ll`` to compile your ``.tex`` file, you should  have a pdf file generated by ``latexmk`` along with various auxiliary files *including a synctex file*.
We'll need this in the second step.

Step 2: Evince and SyncTeX
--------------------------
This is much more involved so brace yourselves.
I knew that forward and reverse search were possible using the (default) evince pdf viewer on Ubuntu 14.04 because both worked with LaTeXTools and Sublime.
Inside the ``evince`` directory in the [GitHub Repo](https://github.com/SublimeText/LaTeXTools) for LaTeXTools, I found three files that seemed to match those linked to on [this article](http://ubuntuforums.org/showthread.php?t=1716268).
After downloading both sets of file, I diffed each pair.
By doing this I learned that the ``evince_backward_search`` and ``evince_forward_search`` python scripts from LaTeX tools are slightly altered versions of the files from the Ubuntu forums that incorporate the many suggestions that appear later in the thread.
The ``evince_sync`` file, on the other hand, is a modified version of the ``evince`` from the Ubuntu forum that has been changed to call Sublime rather than gvim for reverse search and to source both python scripts without assuming that they have been set to be executable.

So here's what I did.
I first created a ``~/bin`` directory and restarted my computer.
Ubuntu checks to see if this directory exists on startup: if it exists it is added to the path.
(On other Linux distributions you may need to manually add this directory to your path if you haven't already.)
I then copied the ``evince`` file from the Ubuntu forums, which was set up for gvim, and the ``evince_backward_search`` and ``evince_forward_search``
files from LaTeX tools into ``~/bin`` and made each of them executable with ``chmod +x [filename]``.
All three of these files are in my [frank-bin](https://github.com/fditraglia/frank-bin) repository.
Finally, I created the file `` ~/.vim/after/ftplugin/tex.vim`` and added the lines
```
function! Tex_ForwardSearchLaTeX()
  let cmd = 'evince_forward_search ' . fnamemodify(Tex_GetMainFileName(), ":p:r") .  '.pdf ' . line(".") . ' ' . expand("%:p")
  let output = system(cmd)
endfunction
```
as suggested on the Ubuntu forums.
It worked! 
Well, it pretty much worked.
Now ``\ls`` does forward search and I can control click inside evince to do a reverse search.
The only unresolved issue is that the **first** time I do a reverse search, evince launches **two** duplicate copies of gvim.
All subsequent reverse searches work exactly as expected.
If you have any idea what's going on here, send me a tweet or email.
In the meantime, I've decided that my new LaTeX setup is good enough, so farewell Sublime Text!
